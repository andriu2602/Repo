import groovy.transform.Field
import groovy.json.JsonSlurper
import java.io.IOException;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

//Variables logica
@Field String defaultOption="00_ZERO"
@Field def labelParameters = []
@Field def userWeblogic
@Field def passWeblogic


//------------------------------INICIO VARIABLES MODIFICABLES----------------------------------------------------------
      //------------------------------INICIO VARIABLES MODIFICABLES----------------------------------------------------------
//Variables Nexus
@Field String urlNexus="https://devops-nexus.ath.net"
@Field String defaultRepository="maven-SISCOI-release"
@Field String defaultExtension="ear"
@Field String groupId="desarrollo"
@Field String credentialNexusId="ugithub"

//Variables weblogic
//@Field def urlWeblogic="http://10.130.1.164:1482/"
@Field def hostname="SCC-SERVWL02"
@Field def userSoRemote="jenkins_deploy"
@Field def domainFolder="/cygdrive/c/Apl/Oracle/domains/SISCOIWLS"
@Field def ip="10.130.21.207"
@Field def port="7001"
@Field def urlWeblogic="http://"+ip+":"+port+"/"
@Field def credentialWeblogicId="SISCOI_JENKINS_PT"
@Field int waitingTime=12


@Field def availableTargets = ["SISCOIDESABTA","SISCOIDESAPOP","SISCOISOPPOP"]


@Field def infoComponents = [
	//["componentWeblogic":["targetWeblogic","repositoryNexus","artifactIdNexus,"artifactExtension","DINAMICO/FIJO"]]    
	"TablasBasicas_parent":["",defaultRepository,"TablasBasicas_parent",defaultExtension,"Target Dinamico"],
    "ListasRestrictivasEAR":["",defaultRepository,"ListasRestrictivasEAR",defaultExtension,"Target Dinamico"],
    "SiscoiEar":["",defaultRepository,"SISCOI_EAR",defaultExtension,"Target Dinamico"],
    "WebServiceEAR":["",defaultRepository,"WebServiceEAR",defaultExtension,"Target Dinamico"],
    "AccesosEAR":["",defaultRepository,"AccesosEAR",defaultExtension,"Target Dinamico"],
    "crystalreportviewers":["",defaultRepository,"crystalreportviewers",defaultExtension,"Target Dinamico"]
 ]
 
@Field def infoCluster = [
	"cluster":["server1", "server2", "server3"]
]

//Variables logica
@Field String defaultOption="00_ZERO"
@Field def labelParameters = []
@Field def userWeblogic
@Field def passWeblogic     

node ('master') {
    try{ 
        labelParameters.add([$class: 'BooleanParameterDefinition', defaultValue: false, description: '', name: 'Refresh_Parameters'])
        labelParameters.add([$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'SHUTDOWN_SERVERS'])
        labelParameters.add([$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'Undeploy_Components'])
        labelParameters.add([$class: 'BooleanParameterDefinition', defaultValue: false, description: '', name: 'Borrado_temporales'])
        labelParameters.add([$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'Deploy_Components'])
        labelParameters.add([$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'START_SERVERS'])
        for(String newTarget in availableTargets){
            labelParameters.add([$class: 'BooleanParameterDefinition', defaultValue: false, description: '', name: newTarget])
        }
		for(String component in infoComponents.keySet()){
			def repository = infoComponents.get(component)[1]
			def artifactId = infoComponents.get(component)[2]
            getNexusVersion(component, repository, groupId, artifactId)	

        }
		for(String componentActual in infoComponents.keySet()){
            getWl(componentActual)		
        }
        labelParameters.add([$class: 'WHideParameterDefinition', defaultValue: 'PT', description: '', name: 'mon_ambiente'])
		labelParameters.add([$class: 'WHideParameterDefinition', defaultValue: 'APP', description: '', name: 'mon_tipo'])
		labelParameters.add([$class: 'WHideParameterDefinition', defaultValue: 'SISCOI', description: '', name: 'mon_plataforma'])
		labelParameters.add([$class: 'WHideParameterDefinition', defaultValue: 'CD', description: '', name: 'mon_practica'])
        properties(
            [parameters(
                labelParameters
            )]
        )
    
        stage('Download Artifacts Nexus') {
            cleanWs()
            if(Refresh_Parameters == "false"){
				for(component in infoComponents.keySet()){
					if(params."$component" !=defaultOption){
						println "[INFO] Descargando COMPONENTE: "+component+ " Version: "+params."$component"
						downloadsComponents(infoComponents.get(component)[1],infoComponents.get(component)[2],params."$component",infoComponents.get(component)[3])
					}
				}
				
            }else{
                println "Refrescando parametros!!"
            } 
        }
		stage('Shutdown Servers') {
            if(Refresh_Parameters == "false"){
				if(SHUTDOWN_SERVERS == "true"){
					taskWeblogic("shutdown")
				}
            }else{
                println "Refrescando parametros!!"
            } 
        }
		stage('unDeploy Apps') {
            if(Refresh_Parameters == "false"){
				if(Undeploy_Components == "true"){
					taskWeblogic("undeploy")
				}
            }else{
                println "Refrescando parametros!!"
            } 
        }
		stage('Borrando temporales') {
            if(Refresh_Parameters == "false"){
				if(Borrado_temporales == "true"){
					taskWeblogic("deleteTemps")
				}
            }else{
                println "Refrescando parametros!!"
            } 
        }
		stage('Deploy Apps') {
            if(Refresh_Parameters == "false"){
				if(Deploy_Components == "true"){
					taskWeblogic("deploy")
				}
            }else{
                println "Refrescando parametros!!"
            } 
        }
		stage('Start Servers') {
            if(Refresh_Parameters == "false"){
				if(START_SERVERS == "true"){
					taskWeblogic("start")
				}
            }else{
                println "Refrescando parametros!!"
            } 
        }
		
		stage('Notificacion') {
            if(Refresh_Parameters == "false"){
				emailext attachLog: false, attachmentsPattern: "", body:'''${SCRIPT, template="groovy-html.template"}''', subject: "${JOB_NAME} # ${BUILD_NUMBER} ${currentBuild.currentResult}", to: "desplieguebus_team@ath.com.co"
            }else{
                println "Refrescando parametros!!"
            } 
        }
    }catch(Exception errorTotal){
        
        cleanWs()
        error (errorTotal.toString())
    } 
}

pipeline {
    agent any
	
	tools {nodejs "Node"}
	
    stages {
		
		stage('conection') {
		steps{
		git credentialsId: '166f5d56-43fd-4c19-9999-6720de690b1e', url: 'https://github.com/andriu2602/HW_nodejs.git'
		}
		}
        
		stage('buil'){
			steps{
				bat 'npm install pm2 -g'
				
			
			}
		
		
		}
		stage('deploy'){
			steps{
				bat 'pm2 start index.js'
				
			
			}
		
		
		}
		
    }
}